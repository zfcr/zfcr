<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:jee="http://www.springframework.org/schema/jee"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:task="http://www.springframework.org/schema/task"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:ldap="http://www.springframework.org/schema/ldap"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
					    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
					    http://www.springframework.org/schema/tx
					    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
					    http://www.springframework.org/schema/jee
					    http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
					    http://www.springframework.org/schema/aop
					    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
					    http://www.springframework.org/schema/context
					    http://www.springframework.org/schema/context/spring-context-3.2.xsd
					    http://www.springframework.org/schema/task
					 	http://www.springframework.org/schema/task/spring-task-3.2.xsd
      					http://www.springframework.org/schema/ldap 
      					http://www.springframework.org/schema/ldap/spring-ldap.xsd
    					">

	<context:annotation-config />
	<context:component-scan base-package="com.bksuns"/>
	<aop:aspectj-autoproxy/>
	
	<!-- 定时器开始 -->
	<!-- <task:annotation-driven/> -->
	<bean id="schedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean" />
	<!-- 定时器结束 -->
	
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:jdbc.properties</value>
            </list>
        </property>
    </bean>
    <!-- 
    <bean id="dataSource" class="com.p6spy.engine.spy.P6DataSource">
    	<constructor-arg ref="dataSourceSPY"></constructor-arg>
    </bean>
    -->
 
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${jdbc.driver}" />
        <property name="jdbcUrl" value="${jdbc.url}" />
        <property name="user" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        
        
		<!--连接池中保留的最小连接数。-->
		<property name="minPoolSize" value="${c3p0.minPoolSize}" />
		<!--连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize" value="${c3p0.maxPoolSize}" />
		

		<!--初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
		<property name="initialPoolSize" value="1" />
		<!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="60" />
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement" value="5" />
		<!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
		<property name="idleConnectionTestPeriod" value="60" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="hibernateProperties">
			<props>
                <!-- <prop key="hibernate.dialect">${hibernate.dialect}</prop> -->
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.default_schema">${hibernate.default_schema}</prop> 
				<prop key="hibernate.jdbc.fetch_size">50</prop>
				<prop key="hibernate.jdbc.batch_size">25</prop>
			</props>
		</property>
		<property name="packagesToScan" value="com.bksuns" />
	</bean>
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	<!--使用基于注解方式配置事务 -->
	<tx:annotation-driven transaction-manager="txManager"/>
</beans>